/*!
	@mainpage OpenGL Mathematics
	
	OpenGL Mathematics (GLM) is a header only C++ mathematics library for graphics software based on the OpenGL Shading Language (GLSL) specification.

	GLM provides classes and functions designed and implemented with the same naming conventions and functionalities than GLSL so that when a programmer knows GLSL, he knows GLM as well which makes it really easy to use.
	
	This project isn't limited to GLSL features. An extension system, based on the GLSL extension conventions, provides extended capabilities: matrix transformations, quaternions, half-based types, random numbers, noise, etc...
	
	This library works perfectly with OpenGL but it also ensures interoperability with other third party libraries and SDK. It is a good candidate for software rendering (raytracing / rasterisation), image processing, physic simulations and any development context that requires a simple and convenient mathematics library.
	
	GLM is written in C++98 but can take advantage of C++11 when supported by the compiler. It is a platform independent library with no dependence and it officially supports the following compilers:
	- Apple Clang 4.0 and higher
	- CUDA 4.0 and higher
	- GCC 4.2 and higher
	- LLVM 3.0 and higher
	- Intel C++ Composer XE 2013 and higher
	- Visual Studio 2010 and higher
	- Any conform C++98 compiler

	@note The Doxygen-generated documentation will often state that a type or function
	is defined in a namespace that is a child of the @link glm glm @endlink namespace.
	Please ignore this; All publicly available types and functions can be accessed as a direct children
	of the glm namespace.
	 
	The source code is licenced under the <a href="http://www.opensource.org/licenses/mit-license.php">MIT licence</a>.

	These pages are the API reference only. For more information about how to use GLM, please have a look at <a href="http://glm.g-truc.net/glm.pdf">the manual</a>.
	 
	Thanks for contributing to the project by <a href="https://github.com/g-truc/glm/issues">submitting tickets for bug reports and feature requests</a>.
	Any feedback is welcome at glm@g-truc.net.
**/
